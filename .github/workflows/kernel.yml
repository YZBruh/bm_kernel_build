name: Build Kernel

on:
  workflow_dispatch:
    inputs:
      GITCLEANUP:
        description: 'cleanup/make more space'
        required: false
        default: 'false'
        type: boolean
        
permissions:
  contents: write

jobs:

  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Cleanup
      if: github.event.inputs.GITCLEANUP == 'true'
      uses: rokibhasansagar/slimhub_actions@v23.44.6

    - name: Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install git ccache automake tar flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3

    - name: Compile Kernel
      run: |
        chmod a+x build
        ./build

    - name: Set Properties
      id: props
      run: |
        echo "date=$(TZ=Asia/Manila date +%Y%m%d-%I%M%p)" >> $GITHUB_OUTPUT
        echo "KERNEL_SOURCE=$(cat build | grep -w "KERNEL_SOURCE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "KERNEL_BRANCH=$(cat build | grep -w "KERNEL_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "KERNEL_DEFCONFIG=$(cat build | grep -w "KERNEL_DEFCONFIG" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "KERNEL=$(cat build | grep -w "KERNEL" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "CLANG_URL=$(cat build | grep -w "CLANG_URL" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        
    - name: Release
      if: env.CHECK_FILE_IS_OK == 'true'
      uses: ncipollo/release-action@v1.14.0
      with:
        artifacts: |
          /home/runner/work/${{ env.KERNEL }}/out/arch/arm64/boot/Image*
          /home/runner/work/${{ env.KERNEL }}/out/arch/arm64/boot/dtbo.img
          /home/runner/work/${{ env.KERNEL }}/build.log
        name: Compiled Kernel // ${{ steps.props.outputs.date }}
        draft: false
        prerelease: false
        tag: ${{ github.run_id }}-${{ steps.props.outputs.date }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          KERNEL: ${{ env.KERNEL_SOURCE }}
          BRANCH: ${{ env.KERNEL_BRANCH }}
          DEFCONFIG: ${{ env.KERNEL_DEFCONFIG }}
          COMPILER: ${{ env.CLANG_URL }}

    - name: Link of Release
      run: |
        echo "Enjoy your Newly Built Kernel"
        echo "https://github.com/${GITHUB_REPOSITORY}/releases/tag/${{ github.run_id }}-${{ steps.props.outputs.date }}"
